"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/account-executives.ts":
/*!****************************************!*\
  !*** ./services/account-executives.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccountExecutiveByEmail: function() { return /* binding */ getAccountExecutiveByEmail; },\n/* harmony export */   getAccountExecutives: function() { return /* binding */ getAccountExecutives; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase-client */ \"(app-pages-browser)/./lib/supabase-client.ts\");\n\n// Generate initials from full name\nfunction getInitials(fullName) {\n    return fullName.split(\" \").map((part)=>part[0]).join(\"\").toUpperCase().slice(0, 2);\n}\n// Generate a consistent color based on name\nfunction getColorForName(name) {\n    const colors = [\n        \"bg-blue-200\",\n        \"bg-green-200\",\n        \"bg-purple-200\",\n        \"bg-red-200\",\n        \"bg-yellow-200\",\n        \"bg-indigo-200\",\n        \"bg-pink-200\",\n        \"bg-teal-200\"\n    ];\n    // Simple hash function to get consistent color\n    let hash = 0;\n    for(let i = 0; i < name.length; i++){\n        hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return colors[Math.abs(hash) % colors.length];\n}\n// Enhance account executive data with derived properties\nfunction enhanceAccountExecutive(ae) {\n    return {\n        ...ae,\n        initials: getInitials(ae.full_name),\n        color: getColorForName(ae.full_name)\n    };\n}\nasync function getAccountExecutives() {\n    const { data, error } = await _lib_supabase_client__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"Account Executives\").select(\"*\").order(\"full_name\");\n    if (error) {\n        console.error(\"Error fetching account executives:\", error);\n        return [];\n    }\n    // Enhance each account executive with derived properties\n    return (data || []).map(enhanceAccountExecutive);\n}\nasync function getAccountExecutiveByEmail(email) {\n    // Extract the name part from the email (first.last@shiphero.com)\n    const namePart = email.split(\"@\")[0];\n    if (!namePart) return null;\n    // Convert first.last to First Last format\n    const nameWords = namePart.split(\".\");\n    const formattedName = nameWords.map((word)=>word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n    // Get all account executives\n    const allExecutives = await getAccountExecutives();\n    // Try to find a match by comparing the formatted name with full_name\n    const matchedAE = allExecutives.find((ae)=>ae.full_name.toLowerCase().includes(formattedName.toLowerCase()));\n    return matchedAE || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2FjY291bnQtZXhlY3V0aXZlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFZakQsbUNBQW1DO0FBQ25DLFNBQVNDLFlBQVlDLFFBQWdCO0lBQ25DLE9BQU9BLFNBQ0pDLEtBQUssQ0FBQyxLQUNOQyxHQUFHLENBQUNDLENBQUFBLE9BQVFBLElBQUksQ0FBQyxFQUFFLEVBQ25CQyxJQUFJLENBQUMsSUFDTEMsV0FBVyxHQUNYQyxLQUFLLENBQUMsR0FBRztBQUNkO0FBRUEsNENBQTRDO0FBQzVDLFNBQVNDLGdCQUFnQkMsSUFBWTtJQUNuQyxNQUFNQyxTQUFTO1FBQ2I7UUFBZTtRQUFnQjtRQUFpQjtRQUNoRDtRQUFpQjtRQUFpQjtRQUFlO0tBQ2xEO0lBRUQsK0NBQStDO0lBQy9DLElBQUlDLE9BQU87SUFDWCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUgsS0FBS0ksTUFBTSxFQUFFRCxJQUFLO1FBQ3BDRCxPQUFPRixLQUFLSyxVQUFVLENBQUNGLEtBQU0sRUFBQ0QsUUFBUSxLQUFLQSxJQUFHO0lBQ2hEO0lBRUEsT0FBT0QsTUFBTSxDQUFDSyxLQUFLQyxHQUFHLENBQUNMLFFBQVFELE9BQU9HLE1BQU0sQ0FBQztBQUMvQztBQUVBLHlEQUF5RDtBQUN6RCxTQUFTSSx3QkFBd0JDLEVBQW9CO0lBQ25ELE9BQU87UUFDTCxHQUFHQSxFQUFFO1FBQ0xDLFVBQVVuQixZQUFZa0IsR0FBR0UsU0FBUztRQUNsQ0MsT0FBT2IsZ0JBQWdCVSxHQUFHRSxTQUFTO0lBQ3JDO0FBQ0Y7QUFFTyxlQUFlRTtJQUNwQixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTXpCLDBEQUFRQSxDQUNuQzBCLElBQUksQ0FBQyxzQkFDTEMsTUFBTSxDQUFDLEtBQ1BDLEtBQUssQ0FBQztJQUVULElBQUlILE9BQU87UUFDVEksUUFBUUosS0FBSyxDQUFDLHNDQUFzQ0E7UUFDcEQsT0FBTyxFQUFFO0lBQ1g7SUFFQSx5REFBeUQ7SUFDekQsT0FBTyxDQUFDRCxRQUFRLEVBQUUsRUFBRXBCLEdBQUcsQ0FBQ2M7QUFDMUI7QUFFTyxlQUFlWSwyQkFBMkJDLEtBQWE7SUFDNUQsaUVBQWlFO0lBQ2pFLE1BQU1DLFdBQVdELE1BQU01QixLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDcEMsSUFBSSxDQUFDNkIsVUFBVSxPQUFPO0lBRXRCLDBDQUEwQztJQUMxQyxNQUFNQyxZQUFZRCxTQUFTN0IsS0FBSyxDQUFDO0lBQ2pDLE1BQU0rQixnQkFBZ0JELFVBQ25CN0IsR0FBRyxDQUFDK0IsQ0FBQUEsT0FBUUEsS0FBS0MsTUFBTSxDQUFDLEdBQUc3QixXQUFXLEtBQUs0QixLQUFLM0IsS0FBSyxDQUFDLElBQ3RERixJQUFJLENBQUM7SUFFUiw2QkFBNkI7SUFDN0IsTUFBTStCLGdCQUFnQixNQUFNZDtJQUU1QixxRUFBcUU7SUFDckUsTUFBTWUsWUFBWUQsY0FBY0UsSUFBSSxDQUFDcEIsQ0FBQUEsS0FDbkNBLEdBQUdFLFNBQVMsQ0FBQ21CLFdBQVcsR0FBR0MsUUFBUSxDQUFDUCxjQUFjTSxXQUFXO0lBRy9ELE9BQU9GLGFBQWE7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvYWNjb3VudC1leGVjdXRpdmVzLnRzPzRkZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICdAL2xpYi9zdXBhYmFzZS1jbGllbnQnO1xuXG5leHBvcnQgdHlwZSBBY2NvdW50RXhlY3V0aXZlID0ge1xuICBpZDogbnVtYmVyO1xuICBmdWxsX25hbWU6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICBwcm9maWxlX3BpY3R1cmVfdXJsPzogc3RyaW5nO1xuICAvLyBEZXJpdmVkIHByb3BlcnRpZXNcbiAgaW5pdGlhbHM/OiBzdHJpbmc7XG4gIGNvbG9yPzogc3RyaW5nO1xufTtcblxuLy8gR2VuZXJhdGUgaW5pdGlhbHMgZnJvbSBmdWxsIG5hbWVcbmZ1bmN0aW9uIGdldEluaXRpYWxzKGZ1bGxOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gZnVsbE5hbWVcbiAgICAuc3BsaXQoJyAnKVxuICAgIC5tYXAocGFydCA9PiBwYXJ0WzBdKVxuICAgIC5qb2luKCcnKVxuICAgIC50b1VwcGVyQ2FzZSgpXG4gICAgLnNsaWNlKDAsIDIpO1xufVxuXG4vLyBHZW5lcmF0ZSBhIGNvbnNpc3RlbnQgY29sb3IgYmFzZWQgb24gbmFtZVxuZnVuY3Rpb24gZ2V0Q29sb3JGb3JOYW1lKG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGNvbG9ycyA9IFtcbiAgICBcImJnLWJsdWUtMjAwXCIsIFwiYmctZ3JlZW4tMjAwXCIsIFwiYmctcHVycGxlLTIwMFwiLCBcImJnLXJlZC0yMDBcIiwgXG4gICAgXCJiZy15ZWxsb3ctMjAwXCIsIFwiYmctaW5kaWdvLTIwMFwiLCBcImJnLXBpbmstMjAwXCIsIFwiYmctdGVhbC0yMDBcIlxuICBdO1xuICBcbiAgLy8gU2ltcGxlIGhhc2ggZnVuY3Rpb24gdG8gZ2V0IGNvbnNpc3RlbnQgY29sb3JcbiAgbGV0IGhhc2ggPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5hbWUubGVuZ3RoOyBpKyspIHtcbiAgICBoYXNoID0gbmFtZS5jaGFyQ29kZUF0KGkpICsgKChoYXNoIDw8IDUpIC0gaGFzaCk7XG4gIH1cbiAgXG4gIHJldHVybiBjb2xvcnNbTWF0aC5hYnMoaGFzaCkgJSBjb2xvcnMubGVuZ3RoXTtcbn1cblxuLy8gRW5oYW5jZSBhY2NvdW50IGV4ZWN1dGl2ZSBkYXRhIHdpdGggZGVyaXZlZCBwcm9wZXJ0aWVzXG5mdW5jdGlvbiBlbmhhbmNlQWNjb3VudEV4ZWN1dGl2ZShhZTogQWNjb3VudEV4ZWN1dGl2ZSk6IEFjY291bnRFeGVjdXRpdmUge1xuICByZXR1cm4ge1xuICAgIC4uLmFlLFxuICAgIGluaXRpYWxzOiBnZXRJbml0aWFscyhhZS5mdWxsX25hbWUpLFxuICAgIGNvbG9yOiBnZXRDb2xvckZvck5hbWUoYWUuZnVsbF9uYW1lKVxuICB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudEV4ZWN1dGl2ZXMoKTogUHJvbWlzZTxBY2NvdW50RXhlY3V0aXZlW10+IHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgnQWNjb3VudCBFeGVjdXRpdmVzJylcbiAgICAuc2VsZWN0KCcqJylcbiAgICAub3JkZXIoJ2Z1bGxfbmFtZScpO1xuICBcbiAgaWYgKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYWNjb3VudCBleGVjdXRpdmVzOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgXG4gIC8vIEVuaGFuY2UgZWFjaCBhY2NvdW50IGV4ZWN1dGl2ZSB3aXRoIGRlcml2ZWQgcHJvcGVydGllc1xuICByZXR1cm4gKGRhdGEgfHwgW10pLm1hcChlbmhhbmNlQWNjb3VudEV4ZWN1dGl2ZSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50RXhlY3V0aXZlQnlFbWFpbChlbWFpbDogc3RyaW5nKTogUHJvbWlzZTxBY2NvdW50RXhlY3V0aXZlIHwgbnVsbD4ge1xuICAvLyBFeHRyYWN0IHRoZSBuYW1lIHBhcnQgZnJvbSB0aGUgZW1haWwgKGZpcnN0Lmxhc3RAc2hpcGhlcm8uY29tKVxuICBjb25zdCBuYW1lUGFydCA9IGVtYWlsLnNwbGl0KCdAJylbMF07XG4gIGlmICghbmFtZVBhcnQpIHJldHVybiBudWxsO1xuICBcbiAgLy8gQ29udmVydCBmaXJzdC5sYXN0IHRvIEZpcnN0IExhc3QgZm9ybWF0XG4gIGNvbnN0IG5hbWVXb3JkcyA9IG5hbWVQYXJ0LnNwbGl0KCcuJyk7XG4gIGNvbnN0IGZvcm1hdHRlZE5hbWUgPSBuYW1lV29yZHNcbiAgICAubWFwKHdvcmQgPT4gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSkpXG4gICAgLmpvaW4oJyAnKTtcbiAgXG4gIC8vIEdldCBhbGwgYWNjb3VudCBleGVjdXRpdmVzXG4gIGNvbnN0IGFsbEV4ZWN1dGl2ZXMgPSBhd2FpdCBnZXRBY2NvdW50RXhlY3V0aXZlcygpO1xuICBcbiAgLy8gVHJ5IHRvIGZpbmQgYSBtYXRjaCBieSBjb21wYXJpbmcgdGhlIGZvcm1hdHRlZCBuYW1lIHdpdGggZnVsbF9uYW1lXG4gIGNvbnN0IG1hdGNoZWRBRSA9IGFsbEV4ZWN1dGl2ZXMuZmluZChhZSA9PiBcbiAgICBhZS5mdWxsX25hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhmb3JtYXR0ZWROYW1lLnRvTG93ZXJDYXNlKCkpXG4gICk7XG4gIFxuICByZXR1cm4gbWF0Y2hlZEFFIHx8IG51bGw7XG59ICJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImdldEluaXRpYWxzIiwiZnVsbE5hbWUiLCJzcGxpdCIsIm1hcCIsInBhcnQiLCJqb2luIiwidG9VcHBlckNhc2UiLCJzbGljZSIsImdldENvbG9yRm9yTmFtZSIsIm5hbWUiLCJjb2xvcnMiLCJoYXNoIiwiaSIsImxlbmd0aCIsImNoYXJDb2RlQXQiLCJNYXRoIiwiYWJzIiwiZW5oYW5jZUFjY291bnRFeGVjdXRpdmUiLCJhZSIsImluaXRpYWxzIiwiZnVsbF9uYW1lIiwiY29sb3IiLCJnZXRBY2NvdW50RXhlY3V0aXZlcyIsImRhdGEiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJvcmRlciIsImNvbnNvbGUiLCJnZXRBY2NvdW50RXhlY3V0aXZlQnlFbWFpbCIsImVtYWlsIiwibmFtZVBhcnQiLCJuYW1lV29yZHMiLCJmb3JtYXR0ZWROYW1lIiwid29yZCIsImNoYXJBdCIsImFsbEV4ZWN1dGl2ZXMiLCJtYXRjaGVkQUUiLCJmaW5kIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/account-executives.ts\n"));

/***/ })

});