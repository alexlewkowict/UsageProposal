"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/account-executives.ts":
/*!****************************************!*\
  !*** ./services/account-executives.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccountExecutiveByEmail: function() { return /* binding */ getAccountExecutiveByEmail; },\n/* harmony export */   getAccountExecutives: function() { return /* binding */ getAccountExecutives; }\n/* harmony export */ });\n// Generate initials from full name\nfunction getInitials(fullName) {\n    return fullName.split(\" \").map((part)=>part[0]).join(\"\").toUpperCase().slice(0, 2);\n}\n// Generate a consistent color based on name\nfunction getColorForName(name) {\n    const colors = [\n        \"bg-blue-200\",\n        \"bg-green-200\",\n        \"bg-purple-200\",\n        \"bg-red-200\",\n        \"bg-yellow-200\",\n        \"bg-indigo-200\",\n        \"bg-pink-200\",\n        \"bg-teal-200\"\n    ];\n    // Simple hash function to get consistent color\n    let hash = 0;\n    for(let i = 0; i < name.length; i++){\n        hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return colors[Math.abs(hash) % colors.length];\n}\n// Enhance account executive data with derived properties\nfunction enhanceAccountExecutive(ae) {\n    return {\n        ...ae,\n        initials: getInitials(ae.full_name),\n        color: getColorForName(ae.full_name)\n    };\n}\nasync function getAccountExecutives() {\n    try {\n        const response = await fetch(\"/api/account-executives\");\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch account executives\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching account executives:\", error);\n        return [];\n    }\n}\nasync function getAccountExecutiveByEmail(email) {\n    try {\n        const response = await fetch(\"/api/account-executives/by-email?email=\".concat(encodeURIComponent(email)));\n        if (!response.ok) {\n            if (response.status === 404) {\n                return null;\n            }\n            throw new Error(\"Failed to fetch account executive by email\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Error fetching account executive by email:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2FjY291bnQtZXhlY3V0aXZlcy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQVlBLG1DQUFtQztBQUNuQyxTQUFTQSxZQUFZQyxRQUFnQjtJQUNuQyxPQUFPQSxTQUNKQyxLQUFLLENBQUMsS0FDTkMsR0FBRyxDQUFDQyxDQUFBQSxPQUFRQSxJQUFJLENBQUMsRUFBRSxFQUNuQkMsSUFBSSxDQUFDLElBQ0xDLFdBQVcsR0FDWEMsS0FBSyxDQUFDLEdBQUc7QUFDZDtBQUVBLDRDQUE0QztBQUM1QyxTQUFTQyxnQkFBZ0JDLElBQVk7SUFDbkMsTUFBTUMsU0FBUztRQUNiO1FBQWU7UUFBZ0I7UUFBaUI7UUFDaEQ7UUFBaUI7UUFBaUI7UUFBZTtLQUNsRDtJQUVELCtDQUErQztJQUMvQyxJQUFJQyxPQUFPO0lBQ1gsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEtBQUtJLE1BQU0sRUFBRUQsSUFBSztRQUNwQ0QsT0FBT0YsS0FBS0ssVUFBVSxDQUFDRixLQUFNLEVBQUNELFFBQVEsS0FBS0EsSUFBRztJQUNoRDtJQUVBLE9BQU9ELE1BQU0sQ0FBQ0ssS0FBS0MsR0FBRyxDQUFDTCxRQUFRRCxPQUFPRyxNQUFNLENBQUM7QUFDL0M7QUFFQSx5REFBeUQ7QUFDekQsU0FBU0ksd0JBQXdCQyxFQUFvQjtJQUNuRCxPQUFPO1FBQ0wsR0FBR0EsRUFBRTtRQUNMQyxVQUFVbkIsWUFBWWtCLEdBQUdFLFNBQVM7UUFDbENDLE9BQU9iLGdCQUFnQlUsR0FBR0UsU0FBUztJQUNyQztBQUNGO0FBRU8sZUFBZUU7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTTtRQUM3QixJQUFJLENBQUNELFNBQVNFLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxPQUFPLE1BQU1ILFNBQVNJLElBQUk7SUFDNUIsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxzQ0FBc0NBO1FBQ3BELE9BQU8sRUFBRTtJQUNYO0FBQ0Y7QUFFTyxlQUFlRSwyQkFBMkJDLEtBQWE7SUFDNUQsSUFBSTtRQUNGLE1BQU1SLFdBQVcsTUFBTUMsTUFBTSwwQ0FBb0UsT0FBMUJRLG1CQUFtQkQ7UUFDMUYsSUFBSSxDQUFDUixTQUFTRSxFQUFFLEVBQUU7WUFDaEIsSUFBSUYsU0FBU1UsTUFBTSxLQUFLLEtBQUs7Z0JBQzNCLE9BQU87WUFDVDtZQUNBLE1BQU0sSUFBSVAsTUFBTTtRQUNsQjtRQUNBLE9BQU8sTUFBTUgsU0FBU0ksSUFBSTtJQUM1QixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDhDQUE4Q0E7UUFDNUQsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2VydmljZXMvYWNjb3VudC1leGVjdXRpdmVzLnRzPzRkZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICdAL2xpYi9zdXBhYmFzZS1jbGllbnQnO1xuXG5leHBvcnQgdHlwZSBBY2NvdW50RXhlY3V0aXZlID0ge1xuICBpZDogbnVtYmVyO1xuICBmdWxsX25hbWU6IHN0cmluZztcbiAgcm9sZTogc3RyaW5nO1xuICBwcm9maWxlX3BpY3R1cmVfdXJsPzogc3RyaW5nO1xuICAvLyBEZXJpdmVkIHByb3BlcnRpZXNcbiAgaW5pdGlhbHM/OiBzdHJpbmc7XG4gIGNvbG9yPzogc3RyaW5nO1xufTtcblxuLy8gR2VuZXJhdGUgaW5pdGlhbHMgZnJvbSBmdWxsIG5hbWVcbmZ1bmN0aW9uIGdldEluaXRpYWxzKGZ1bGxOYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gZnVsbE5hbWVcbiAgICAuc3BsaXQoJyAnKVxuICAgIC5tYXAocGFydCA9PiBwYXJ0WzBdKVxuICAgIC5qb2luKCcnKVxuICAgIC50b1VwcGVyQ2FzZSgpXG4gICAgLnNsaWNlKDAsIDIpO1xufVxuXG4vLyBHZW5lcmF0ZSBhIGNvbnNpc3RlbnQgY29sb3IgYmFzZWQgb24gbmFtZVxuZnVuY3Rpb24gZ2V0Q29sb3JGb3JOYW1lKG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGNvbG9ycyA9IFtcbiAgICBcImJnLWJsdWUtMjAwXCIsIFwiYmctZ3JlZW4tMjAwXCIsIFwiYmctcHVycGxlLTIwMFwiLCBcImJnLXJlZC0yMDBcIiwgXG4gICAgXCJiZy15ZWxsb3ctMjAwXCIsIFwiYmctaW5kaWdvLTIwMFwiLCBcImJnLXBpbmstMjAwXCIsIFwiYmctdGVhbC0yMDBcIlxuICBdO1xuICBcbiAgLy8gU2ltcGxlIGhhc2ggZnVuY3Rpb24gdG8gZ2V0IGNvbnNpc3RlbnQgY29sb3JcbiAgbGV0IGhhc2ggPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5hbWUubGVuZ3RoOyBpKyspIHtcbiAgICBoYXNoID0gbmFtZS5jaGFyQ29kZUF0KGkpICsgKChoYXNoIDw8IDUpIC0gaGFzaCk7XG4gIH1cbiAgXG4gIHJldHVybiBjb2xvcnNbTWF0aC5hYnMoaGFzaCkgJSBjb2xvcnMubGVuZ3RoXTtcbn1cblxuLy8gRW5oYW5jZSBhY2NvdW50IGV4ZWN1dGl2ZSBkYXRhIHdpdGggZGVyaXZlZCBwcm9wZXJ0aWVzXG5mdW5jdGlvbiBlbmhhbmNlQWNjb3VudEV4ZWN1dGl2ZShhZTogQWNjb3VudEV4ZWN1dGl2ZSk6IEFjY291bnRFeGVjdXRpdmUge1xuICByZXR1cm4ge1xuICAgIC4uLmFlLFxuICAgIGluaXRpYWxzOiBnZXRJbml0aWFscyhhZS5mdWxsX25hbWUpLFxuICAgIGNvbG9yOiBnZXRDb2xvckZvck5hbWUoYWUuZnVsbF9uYW1lKVxuICB9O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudEV4ZWN1dGl2ZXMoKTogUHJvbWlzZTxBY2NvdW50RXhlY3V0aXZlW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2FjY291bnQtZXhlY3V0aXZlcycpO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIGFjY291bnQgZXhlY3V0aXZlcycpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFjY291bnQgZXhlY3V0aXZlczonLCBlcnJvcik7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBY2NvdW50RXhlY3V0aXZlQnlFbWFpbChlbWFpbDogc3RyaW5nKTogUHJvbWlzZTxBY2NvdW50RXhlY3V0aXZlIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvYWNjb3VudC1leGVjdXRpdmVzL2J5LWVtYWlsP2VtYWlsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGVtYWlsKX1gKTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBhY2NvdW50IGV4ZWN1dGl2ZSBieSBlbWFpbCcpO1xuICAgIH1cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGFjY291bnQgZXhlY3V0aXZlIGJ5IGVtYWlsOicsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufSAiXSwibmFtZXMiOlsiZ2V0SW5pdGlhbHMiLCJmdWxsTmFtZSIsInNwbGl0IiwibWFwIiwicGFydCIsImpvaW4iLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiZ2V0Q29sb3JGb3JOYW1lIiwibmFtZSIsImNvbG9ycyIsImhhc2giLCJpIiwibGVuZ3RoIiwiY2hhckNvZGVBdCIsIk1hdGgiLCJhYnMiLCJlbmhhbmNlQWNjb3VudEV4ZWN1dGl2ZSIsImFlIiwiaW5pdGlhbHMiLCJmdWxsX25hbWUiLCJjb2xvciIsImdldEFjY291bnRFeGVjdXRpdmVzIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0QWNjb3VudEV4ZWN1dGl2ZUJ5RW1haWwiLCJlbWFpbCIsImVuY29kZVVSSUNvbXBvbmVudCIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/account-executives.ts\n"));

/***/ })

});